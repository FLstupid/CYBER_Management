<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>